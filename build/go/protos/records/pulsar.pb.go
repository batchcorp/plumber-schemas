// Code generated by protoc-gen-go. DO NOT EDIT.
// source: records/pulsar.proto

package records

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pulsar struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string            `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Topic                string            `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Properties           map[string]string `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RedeliveryCount      uint32            `protobuf:"varint,5,opt,name=redelivery_count,json=redeliveryCount,proto3" json:"redelivery_count,omitempty"`
	EventTime            string            `protobuf:"bytes,6,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	IsReplicated         bool              `protobuf:"varint,7,opt,name=is_replicated,json=isReplicated,proto3" json:"is_replicated,omitempty"`
	OrderingKey          string            `protobuf:"bytes,8,opt,name=ordering_key,json=orderingKey,proto3" json:"ordering_key,omitempty"`
	ProducerName         string            `protobuf:"bytes,9,opt,name=producer_name,json=producerName,proto3" json:"producer_name,omitempty"`
	PublishTime          string            `protobuf:"bytes,10,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	Timestamp            int64             `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value                []byte            `protobuf:"bytes,12,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Pulsar) Reset()         { *m = Pulsar{} }
func (m *Pulsar) String() string { return proto.CompactTextString(m) }
func (*Pulsar) ProtoMessage()    {}
func (*Pulsar) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a0549f99aa998ee, []int{0}
}

func (m *Pulsar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pulsar.Unmarshal(m, b)
}
func (m *Pulsar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pulsar.Marshal(b, m, deterministic)
}
func (m *Pulsar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pulsar.Merge(m, src)
}
func (m *Pulsar) XXX_Size() int {
	return xxx_messageInfo_Pulsar.Size(m)
}
func (m *Pulsar) XXX_DiscardUnknown() {
	xxx_messageInfo_Pulsar.DiscardUnknown(m)
}

var xxx_messageInfo_Pulsar proto.InternalMessageInfo

func (m *Pulsar) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pulsar) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Pulsar) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Pulsar) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Pulsar) GetRedeliveryCount() uint32 {
	if m != nil {
		return m.RedeliveryCount
	}
	return 0
}

func (m *Pulsar) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

func (m *Pulsar) GetIsReplicated() bool {
	if m != nil {
		return m.IsReplicated
	}
	return false
}

func (m *Pulsar) GetOrderingKey() string {
	if m != nil {
		return m.OrderingKey
	}
	return ""
}

func (m *Pulsar) GetProducerName() string {
	if m != nil {
		return m.ProducerName
	}
	return ""
}

func (m *Pulsar) GetPublishTime() string {
	if m != nil {
		return m.PublishTime
	}
	return ""
}

func (m *Pulsar) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Pulsar) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Pulsar)(nil), "protos.records.Pulsar")
	proto.RegisterMapType((map[string]string)(nil), "protos.records.Pulsar.PropertiesEntry")
}

func init() { proto.RegisterFile("records/pulsar.proto", fileDescriptor_8a0549f99aa998ee) }

var fileDescriptor_8a0549f99aa998ee = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcf, 0x8b, 0xd4, 0x30,
	0x14, 0xc7, 0xc9, 0xd4, 0x1d, 0x77, 0x32, 0xdd, 0x1f, 0x84, 0x3d, 0x04, 0x51, 0xa8, 0x0a, 0x52,
	0x0f, 0xb6, 0xa0, 0x17, 0x11, 0xf5, 0xa0, 0xe8, 0x45, 0x90, 0xa5, 0x78, 0xf2, 0x52, 0xd2, 0xe4,
	0x31, 0x13, 0x6c, 0x9a, 0xf0, 0x92, 0x0c, 0xcc, 0x1f, 0xea, 0xff, 0x23, 0x4d, 0x66, 0x76, 0x9d,
	0x3d, 0xb5, 0xdf, 0x4f, 0x5e, 0xbe, 0xef, 0xe5, 0x7d, 0xe9, 0x0d, 0x82, 0xb4, 0xa8, 0x7c, 0xeb,
	0xe2, 0xe8, 0x05, 0x36, 0x0e, 0x6d, 0xb0, 0xec, 0x32, 0x7d, 0x7c, 0x73, 0x38, 0x7c, 0xf1, 0xb7,
	0xa0, 0xcb, 0xdb, 0x54, 0xc0, 0x2e, 0xe9, 0x42, 0x2b, 0x4e, 0x2a, 0x52, 0xaf, 0xba, 0x85, 0x56,
	0xec, 0x9a, 0x16, 0x7f, 0x60, 0xcf, 0x17, 0x09, 0xcc, 0xbf, 0xec, 0x86, 0x9e, 0x05, 0xeb, 0xb4,
	0xe4, 0x45, 0x62, 0x59, 0xb0, 0xef, 0x94, 0x3a, 0xb4, 0x0e, 0x30, 0x68, 0xf0, 0xfc, 0x51, 0x55,
	0xd4, 0xeb, 0xb7, 0xaf, 0x9a, 0xd3, 0x3e, 0x4d, 0xee, 0xd1, 0xdc, 0xde, 0x15, 0x7e, 0x9b, 0x02,
	0xee, 0xbb, 0xff, 0x6e, 0xb2, 0xd7, 0xf4, 0x1a, 0x41, 0xc1, 0xa8, 0x77, 0x80, 0xfb, 0x5e, 0xda,
	0x38, 0x05, 0x7e, 0x56, 0x91, 0xfa, 0xa2, 0xbb, 0xba, 0xe7, 0x5f, 0x67, 0xcc, 0x9e, 0x51, 0x0a,
	0x3b, 0x98, 0x42, 0x1f, 0xb4, 0x01, 0xbe, 0x4c, 0xd3, 0xac, 0x12, 0xf9, 0xa5, 0x0d, 0xb0, 0x97,
	0xf4, 0x42, 0xfb, 0x1e, 0xc1, 0x8d, 0x5a, 0x8a, 0x00, 0x8a, 0x3f, 0xae, 0x48, 0x7d, 0xde, 0x95,
	0xda, 0x77, 0x77, 0x8c, 0x3d, 0xa7, 0xa5, 0x45, 0x05, 0xa8, 0xa7, 0x4d, 0x3f, 0xbf, 0xf3, 0x3c,
	0xb9, 0xac, 0x8f, 0xec, 0x07, 0xec, 0x67, 0x1f, 0x87, 0x56, 0x45, 0x09, 0xd8, 0x4f, 0xc2, 0x00,
	0x5f, 0xa5, 0x9a, 0xf2, 0x08, 0x7f, 0x0a, 0x03, 0xb3, 0x8f, 0x8b, 0xc3, 0xa8, 0xfd, 0x36, 0x4f,
	0x43, 0xb3, 0xcf, 0x81, 0xa5, 0x79, 0x9e, 0xd2, 0xd5, 0x7c, 0xe4, 0x83, 0x30, 0x8e, 0xaf, 0x2b,
	0x52, 0x17, 0xdd, 0x3d, 0x98, 0xb7, 0xba, 0x13, 0x63, 0x04, 0x5e, 0x56, 0xa4, 0x2e, 0xbb, 0x2c,
	0x9e, 0x7c, 0xa2, 0x57, 0x0f, 0x96, 0x75, 0x0c, 0x84, 0x9c, 0x04, 0x92, 0xaf, 0xe6, 0x90, 0xb2,
	0xf8, 0xb0, 0x78, 0x4f, 0xbe, 0x7c, 0xfe, 0xfd, 0x71, 0xa3, 0xc3, 0x36, 0x0e, 0x8d, 0xb4, 0xa6,
	0x1d, 0x44, 0x90, 0x5b, 0x69, 0xd1, 0xb5, 0x6e, 0x8c, 0x66, 0x00, 0x7c, 0xe3, 0xe5, 0x16, 0x8c,
	0xf0, 0xed, 0x10, 0xf5, 0xa8, 0xda, 0x8d, 0x6d, 0x73, 0x5e, 0xed, 0x21, 0xaf, 0x61, 0x99, 0xf4,
	0xbb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9c, 0xa8, 0x5b, 0x1b, 0x46, 0x02, 0x00, 0x00,
}
