// Code generated by protoc-gen-go. DO NOT EDIT.
// source: records/gcp-pubsub.proto

package records

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GCPPubSub struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Attributes           map[string]string `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PublishTime          int64             `protobuf:"varint,4,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	DeliveryAttempt      int32             `protobuf:"varint,5,opt,name=delivery_attempt,json=deliveryAttempt,proto3" json:"delivery_attempt,omitempty"`
	OrderingKey          string            `protobuf:"bytes,6,opt,name=ordering_key,json=orderingKey,proto3" json:"ordering_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GCPPubSub) Reset()         { *m = GCPPubSub{} }
func (m *GCPPubSub) String() string { return proto.CompactTextString(m) }
func (*GCPPubSub) ProtoMessage()    {}
func (*GCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_d090aac563313d3b, []int{0}
}

func (m *GCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCPPubSub.Unmarshal(m, b)
}
func (m *GCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCPPubSub.Marshal(b, m, deterministic)
}
func (m *GCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCPPubSub.Merge(m, src)
}
func (m *GCPPubSub) XXX_Size() int {
	return xxx_messageInfo_GCPPubSub.Size(m)
}
func (m *GCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_GCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_GCPPubSub proto.InternalMessageInfo

func (m *GCPPubSub) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GCPPubSub) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GCPPubSub) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *GCPPubSub) GetPublishTime() int64 {
	if m != nil {
		return m.PublishTime
	}
	return 0
}

func (m *GCPPubSub) GetDeliveryAttempt() int32 {
	if m != nil {
		return m.DeliveryAttempt
	}
	return 0
}

func (m *GCPPubSub) GetOrderingKey() string {
	if m != nil {
		return m.OrderingKey
	}
	return ""
}

func init() {
	proto.RegisterType((*GCPPubSub)(nil), "protos.records.GCPPubSub")
	proto.RegisterMapType((map[string]string)(nil), "protos.records.GCPPubSub.AttributesEntry")
}

func init() { proto.RegisterFile("records/gcp-pubsub.proto", fileDescriptor_d090aac563313d3b) }

var fileDescriptor_d090aac563313d3b = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0x69, 0xeb, 0x06, 0xcb, 0xc6, 0x36, 0x82, 0x87, 0xe0, 0xa9, 0x7a, 0xea, 0x0e, 0x6b,
	0x40, 0x2f, 0x22, 0x2a, 0x4c, 0x11, 0x11, 0x2f, 0xa3, 0x7a, 0xf2, 0x32, 0x9a, 0xe6, 0xa5, 0x0d,
	0x36, 0x4b, 0xc8, 0x9f, 0x41, 0xbf, 0x93, 0x1f, 0x52, 0xd6, 0x76, 0xc3, 0x79, 0x4a, 0xde, 0x1f,
	0x4f, 0x1e, 0xf2, 0x7b, 0x11, 0x31, 0x50, 0x28, 0xc3, 0x2d, 0x2d, 0x0b, 0xbd, 0xd4, 0x9e, 0x59,
	0xcf, 0x52, 0x6d, 0x94, 0x53, 0x78, 0xda, 0x1e, 0x36, 0xed, 0x03, 0x57, 0x3f, 0x21, 0x1a, 0xbd,
	0x3e, 0xaf, 0xd7, 0x9e, 0x7d, 0x78, 0x86, 0xa7, 0x28, 0x14, 0x9c, 0x04, 0x71, 0x90, 0x8c, 0xb2,
	0x50, 0x70, 0x7c, 0x8e, 0x06, 0xbb, 0xbc, 0xf6, 0x40, 0xc2, 0x38, 0x48, 0x26, 0x59, 0x37, 0xe0,
	0x37, 0x84, 0x72, 0xe7, 0x8c, 0x60, 0xde, 0x81, 0x25, 0x51, 0x1c, 0x25, 0xe3, 0xeb, 0x45, 0x7a,
	0x5a, 0x9c, 0x1e, 0x4b, 0xd3, 0xd5, 0x31, 0xfb, 0xb2, 0x75, 0xa6, 0xc9, 0xfe, 0x3c, 0xc6, 0x97,
	0x68, 0xa2, 0x3d, 0xab, 0x85, 0xad, 0x36, 0x4e, 0x48, 0x20, 0x67, 0x71, 0x90, 0x44, 0xd9, 0xb8,
	0x67, 0x9f, 0x42, 0x02, 0x5e, 0xa0, 0x39, 0x87, 0x5a, 0xec, 0xc0, 0x34, 0x9b, 0xdc, 0x39, 0x90,
	0xda, 0x91, 0x41, 0x1c, 0x24, 0x83, 0x6c, 0x76, 0xe0, 0xab, 0x0e, 0xef, 0xdb, 0x94, 0xe1, 0x60,
	0xc4, 0xb6, 0xdc, 0x7c, 0x43, 0x43, 0x86, 0xad, 0xc8, 0xf8, 0xc0, 0xde, 0xa1, 0xb9, 0x78, 0x40,
	0xb3, 0x7f, 0xff, 0xc1, 0x73, 0x14, 0xed, 0xc3, 0x9d, 0xf5, 0xfe, 0x7a, 0xaa, 0x3d, 0xea, 0xb5,
	0xef, 0xc2, 0xdb, 0xe0, 0xe9, 0xf1, 0xeb, 0xbe, 0x14, 0xae, 0xf2, 0x2c, 0x2d, 0x94, 0xa4, 0x2c,
	0x77, 0x45, 0x55, 0x28, 0xa3, 0xa9, 0xae, 0xbd, 0x64, 0x60, 0x96, 0xb6, 0xa8, 0x40, 0xe6, 0x96,
	0x32, 0x2f, 0x6a, 0x4e, 0x4b, 0x45, 0xbb, 0xad, 0xd0, 0x7e, 0x2b, 0x6c, 0xd8, 0xce, 0x37, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x00, 0xab, 0x33, 0xa1, 0x01, 0x00, 0x00,
}
