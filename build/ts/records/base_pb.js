// source: records/base.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var records_kafka_pb = require('../records/kafka_pb.js');
goog.object.extend(proto, records_kafka_pb);
var records_activemq_pb = require('../records/activemq_pb.js');
goog.object.extend(proto, records_activemq_pb);
var records_aws$sqs_pb = require('../records/aws-sqs_pb.js');
goog.object.extend(proto, records_aws$sqs_pb);
var records_mongo_pb = require('../records/mongo_pb.js');
goog.object.extend(proto, records_mongo_pb);
var records_nats_pb = require('../records/nats_pb.js');
goog.object.extend(proto, records_nats_pb);
var records_nats$streaming_pb = require('../records/nats-streaming_pb.js');
goog.object.extend(proto, records_nats$streaming_pb);
var records_nsq_pb = require('../records/nsq_pb.js');
goog.object.extend(proto, records_nsq_pb);
var records_postgres_pb = require('../records/postgres_pb.js');
goog.object.extend(proto, records_postgres_pb);
var records_pulsar_pb = require('../records/pulsar_pb.js');
goog.object.extend(proto, records_pulsar_pb);
var records_rabbit_pb = require('../records/rabbit_pb.js');
goog.object.extend(proto, records_rabbit_pb);
var records_rabbit$streams_pb = require('../records/rabbit-streams_pb.js');
goog.object.extend(proto, records_rabbit$streams_pb);
var records_redis$pubsub_pb = require('../records/redis-pubsub_pb.js');
goog.object.extend(proto, records_redis$pubsub_pb);
var records_redis$streams_pb = require('../records/redis-streams_pb.js');
goog.object.extend(proto, records_redis$streams_pb);
var records_azure$service$bus_pb = require('../records/azure-service-bus_pb.js');
goog.object.extend(proto, records_azure$service$bus_pb);
var records_azure$event$hub_pb = require('../records/azure-event-hub_pb.js');
goog.object.extend(proto, records_azure$event$hub_pb);
var records_mqtt_pb = require('../records/mqtt_pb.js');
goog.object.extend(proto, records_mqtt_pb);
var records_kubemq_pb = require('../records/kubemq_pb.js');
goog.object.extend(proto, records_kubemq_pb);
goog.exportSymbol('proto.protos.records.ErrorRecord', null, global);
goog.exportSymbol('proto.protos.records.ReadRecord', null, global);
goog.exportSymbol('proto.protos.records.ReadRecord.RecordCase', null, global);
goog.exportSymbol('proto.protos.records.WriteRecord', null, global);
goog.exportSymbol('proto.protos.records.WriteRecord.RecordsCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.records.ReadRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protos.records.ReadRecord.oneofGroups_);
};
goog.inherits(proto.protos.records.ReadRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.records.ReadRecord.displayName = 'proto.protos.records.ReadRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.records.WriteRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protos.records.WriteRecord.oneofGroups_);
};
goog.inherits(proto.protos.records.WriteRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.records.WriteRecord.displayName = 'proto.protos.records.WriteRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.records.ErrorRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.records.ErrorRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.records.ErrorRecord.displayName = 'proto.protos.records.ErrorRecord';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protos.records.ReadRecord.oneofGroups_ = [[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116]];

/**
 * @enum {number}
 */
proto.protos.records.ReadRecord.RecordCase = {
  RECORD_NOT_SET: 0,
  KAFKA: 100,
  ACTIVE_MQ: 101,
  AWSSQS: 102,
  MONGO: 103,
  NATS: 104,
  NATS_STREAMING: 105,
  NSQ: 106,
  POSTGRES: 107,
  PULSAR: 108,
  RABBIT: 109,
  RABBIT_STREAMS: 110,
  REDIS_PUBSUB: 111,
  REDIS_STREAMS: 112,
  AZURE_EVENT_HUB: 113,
  AZURE_SERVICE_BUS: 114,
  MQTT: 115,
  KUBEMQ: 116
};

/**
 * @return {proto.protos.records.ReadRecord.RecordCase}
 */
proto.protos.records.ReadRecord.prototype.getRecordCase = function() {
  return /** @type {proto.protos.records.ReadRecord.RecordCase} */(jspb.Message.computeOneofCase(this, proto.protos.records.ReadRecord.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.records.ReadRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.records.ReadRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.records.ReadRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.ReadRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    plumberId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    raw: msg.getRaw_asB64(),
    receivedAtUnixTsUtc: jspb.Message.getFieldWithDefault(msg, 5, 0),
    decoded: msg.getDecoded_asB64(),
    kafka: (f = msg.getKafka()) && records_kafka_pb.Kafka.toObject(includeInstance, f),
    activeMq: (f = msg.getActiveMq()) && records_activemq_pb.ActiveMQ.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && records_aws$sqs_pb.AWSSQS.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && records_mongo_pb.Mongo.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && records_nats_pb.Nats.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && records_nats$streaming_pb.NatsStreaming.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && records_nsq_pb.NSQ.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && records_postgres_pb.Postgres.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && records_pulsar_pb.Pulsar.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && records_rabbit_pb.Rabbit.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && records_rabbit$streams_pb.RabbitStreams.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && records_redis$pubsub_pb.RedisPubsub.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && records_redis$streams_pb.RedisStreams.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && records_azure$event$hub_pb.AzureEventHub.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && records_azure$service$bus_pb.AzureServiceBus.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && records_mqtt_pb.MQTT.toObject(includeInstance, f),
    kubemq: (f = msg.getKubemq()) && records_kubemq_pb.KubeMQ.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.records.ReadRecord}
 */
proto.protos.records.ReadRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.records.ReadRecord;
  return proto.protos.records.ReadRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.records.ReadRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.records.ReadRecord}
 */
proto.protos.records.ReadRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlumberId(value);
      break;
    case 3:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRaw(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedAtUnixTsUtc(value);
      break;
    case 99:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDecoded(value);
      break;
    case 100:
      var value = new records_kafka_pb.Kafka;
      reader.readMessage(value,records_kafka_pb.Kafka.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new records_activemq_pb.ActiveMQ;
      reader.readMessage(value,records_activemq_pb.ActiveMQ.deserializeBinaryFromReader);
      msg.setActiveMq(value);
      break;
    case 102:
      var value = new records_aws$sqs_pb.AWSSQS;
      reader.readMessage(value,records_aws$sqs_pb.AWSSQS.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new records_mongo_pb.Mongo;
      reader.readMessage(value,records_mongo_pb.Mongo.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 104:
      var value = new records_nats_pb.Nats;
      reader.readMessage(value,records_nats_pb.Nats.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new records_nats$streaming_pb.NatsStreaming;
      reader.readMessage(value,records_nats$streaming_pb.NatsStreaming.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new records_nsq_pb.NSQ;
      reader.readMessage(value,records_nsq_pb.NSQ.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new records_postgres_pb.Postgres;
      reader.readMessage(value,records_postgres_pb.Postgres.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    case 108:
      var value = new records_pulsar_pb.Pulsar;
      reader.readMessage(value,records_pulsar_pb.Pulsar.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 109:
      var value = new records_rabbit_pb.Rabbit;
      reader.readMessage(value,records_rabbit_pb.Rabbit.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 110:
      var value = new records_rabbit$streams_pb.RabbitStreams;
      reader.readMessage(value,records_rabbit$streams_pb.RabbitStreams.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 111:
      var value = new records_redis$pubsub_pb.RedisPubsub;
      reader.readMessage(value,records_redis$pubsub_pb.RedisPubsub.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 112:
      var value = new records_redis$streams_pb.RedisStreams;
      reader.readMessage(value,records_redis$streams_pb.RedisStreams.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 113:
      var value = new records_azure$event$hub_pb.AzureEventHub;
      reader.readMessage(value,records_azure$event$hub_pb.AzureEventHub.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 114:
      var value = new records_azure$service$bus_pb.AzureServiceBus;
      reader.readMessage(value,records_azure$service$bus_pb.AzureServiceBus.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 115:
      var value = new records_mqtt_pb.MQTT;
      reader.readMessage(value,records_mqtt_pb.MQTT.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 116:
      var value = new records_kubemq_pb.KubeMQ;
      reader.readMessage(value,records_kubemq_pb.KubeMQ.deserializeBinaryFromReader);
      msg.setKubemq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.records.ReadRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.records.ReadRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.records.ReadRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.ReadRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlumberId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getRaw_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getReceivedAtUnixTsUtc();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDecoded_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      99,
      f
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      records_kafka_pb.Kafka.serializeBinaryToWriter
    );
  }
  f = message.getActiveMq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      records_activemq_pb.ActiveMQ.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      records_aws$sqs_pb.AWSSQS.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      records_mongo_pb.Mongo.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      records_nats_pb.Nats.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      records_nats$streaming_pb.NatsStreaming.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      records_nsq_pb.NSQ.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      records_postgres_pb.Postgres.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      records_pulsar_pb.Pulsar.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      records_rabbit_pb.Rabbit.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      records_rabbit$streams_pb.RabbitStreams.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      records_redis$pubsub_pb.RedisPubsub.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      records_redis$streams_pb.RedisStreams.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      records_azure$event$hub_pb.AzureEventHub.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      records_azure$service$bus_pb.AzureServiceBus.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      records_mqtt_pb.MQTT.serializeBinaryToWriter
    );
  }
  f = message.getKubemq();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      records_kubemq_pb.KubeMQ.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.protos.records.ReadRecord.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string plumber_id = 2;
 * @return {string}
 */
proto.protos.records.ReadRecord.prototype.getPlumberId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.setPlumberId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, bytes> metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.protos.records.ReadRecord.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional bytes raw = 4;
 * @return {!(string|Uint8Array)}
 */
proto.protos.records.ReadRecord.prototype.getRaw = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes raw = 4;
 * This is a type-conversion wrapper around `getRaw()`
 * @return {string}
 */
proto.protos.records.ReadRecord.prototype.getRaw_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRaw()));
};


/**
 * optional bytes raw = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRaw()`
 * @return {!Uint8Array}
 */
proto.protos.records.ReadRecord.prototype.getRaw_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRaw()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.setRaw = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 received_at_unix_ts_utc = 5;
 * @return {number}
 */
proto.protos.records.ReadRecord.prototype.getReceivedAtUnixTsUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.setReceivedAtUnixTsUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes _decoded = 99;
 * @return {!(string|Uint8Array)}
 */
proto.protos.records.ReadRecord.prototype.getDecoded = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 99, ""));
};


/**
 * optional bytes _decoded = 99;
 * This is a type-conversion wrapper around `getDecoded()`
 * @return {string}
 */
proto.protos.records.ReadRecord.prototype.getDecoded_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDecoded()));
};


/**
 * optional bytes _decoded = 99;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDecoded()`
 * @return {!Uint8Array}
 */
proto.protos.records.ReadRecord.prototype.getDecoded_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDecoded()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.setDecoded = function(value) {
  return jspb.Message.setProto3BytesField(this, 99, value);
};


/**
 * optional Kafka kafka = 100;
 * @return {?proto.protos.records.Kafka}
 */
proto.protos.records.ReadRecord.prototype.getKafka = function() {
  return /** @type{?proto.protos.records.Kafka} */ (
    jspb.Message.getWrapperField(this, records_kafka_pb.Kafka, 100));
};


/**
 * @param {?proto.protos.records.Kafka|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setKafka = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ActiveMQ active_mq = 101;
 * @return {?proto.protos.records.ActiveMQ}
 */
proto.protos.records.ReadRecord.prototype.getActiveMq = function() {
  return /** @type{?proto.protos.records.ActiveMQ} */ (
    jspb.Message.getWrapperField(this, records_activemq_pb.ActiveMQ, 101));
};


/**
 * @param {?proto.protos.records.ActiveMQ|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setActiveMq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearActiveMq = function() {
  return this.setActiveMq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasActiveMq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional AWSSQS awssqs = 102;
 * @return {?proto.protos.records.AWSSQS}
 */
proto.protos.records.ReadRecord.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.records.AWSSQS} */ (
    jspb.Message.getWrapperField(this, records_aws$sqs_pb.AWSSQS, 102));
};


/**
 * @param {?proto.protos.records.AWSSQS|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setAwssqs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional Mongo mongo = 103;
 * @return {?proto.protos.records.Mongo}
 */
proto.protos.records.ReadRecord.prototype.getMongo = function() {
  return /** @type{?proto.protos.records.Mongo} */ (
    jspb.Message.getWrapperField(this, records_mongo_pb.Mongo, 103));
};


/**
 * @param {?proto.protos.records.Mongo|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setMongo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional Nats nats = 104;
 * @return {?proto.protos.records.Nats}
 */
proto.protos.records.ReadRecord.prototype.getNats = function() {
  return /** @type{?proto.protos.records.Nats} */ (
    jspb.Message.getWrapperField(this, records_nats_pb.Nats, 104));
};


/**
 * @param {?proto.protos.records.Nats|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setNats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional NatsStreaming nats_streaming = 105;
 * @return {?proto.protos.records.NatsStreaming}
 */
proto.protos.records.ReadRecord.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.records.NatsStreaming} */ (
    jspb.Message.getWrapperField(this, records_nats$streaming_pb.NatsStreaming, 105));
};


/**
 * @param {?proto.protos.records.NatsStreaming|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setOneofWrapperField(this, 105, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional NSQ nsq = 106;
 * @return {?proto.protos.records.NSQ}
 */
proto.protos.records.ReadRecord.prototype.getNsq = function() {
  return /** @type{?proto.protos.records.NSQ} */ (
    jspb.Message.getWrapperField(this, records_nsq_pb.NSQ, 106));
};


/**
 * @param {?proto.protos.records.NSQ|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setNsq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 106, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional Postgres postgres = 107;
 * @return {?proto.protos.records.Postgres}
 */
proto.protos.records.ReadRecord.prototype.getPostgres = function() {
  return /** @type{?proto.protos.records.Postgres} */ (
    jspb.Message.getWrapperField(this, records_postgres_pb.Postgres, 107));
};


/**
 * @param {?proto.protos.records.Postgres|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setPostgres = function(value) {
  return jspb.Message.setOneofWrapperField(this, 107, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional Pulsar pulsar = 108;
 * @return {?proto.protos.records.Pulsar}
 */
proto.protos.records.ReadRecord.prototype.getPulsar = function() {
  return /** @type{?proto.protos.records.Pulsar} */ (
    jspb.Message.getWrapperField(this, records_pulsar_pb.Pulsar, 108));
};


/**
 * @param {?proto.protos.records.Pulsar|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setPulsar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 108, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional Rabbit rabbit = 109;
 * @return {?proto.protos.records.Rabbit}
 */
proto.protos.records.ReadRecord.prototype.getRabbit = function() {
  return /** @type{?proto.protos.records.Rabbit} */ (
    jspb.Message.getWrapperField(this, records_rabbit_pb.Rabbit, 109));
};


/**
 * @param {?proto.protos.records.Rabbit|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setRabbit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 109, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional RabbitStreams rabbit_streams = 110;
 * @return {?proto.protos.records.RabbitStreams}
 */
proto.protos.records.ReadRecord.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.records.RabbitStreams} */ (
    jspb.Message.getWrapperField(this, records_rabbit$streams_pb.RabbitStreams, 110));
};


/**
 * @param {?proto.protos.records.RabbitStreams|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional RedisPubsub redis_pubsub = 111;
 * @return {?proto.protos.records.RedisPubsub}
 */
proto.protos.records.ReadRecord.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.records.RedisPubsub} */ (
    jspb.Message.getWrapperField(this, records_redis$pubsub_pb.RedisPubsub, 111));
};


/**
 * @param {?proto.protos.records.RedisPubsub|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 111, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional RedisStreams redis_streams = 112;
 * @return {?proto.protos.records.RedisStreams}
 */
proto.protos.records.ReadRecord.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.records.RedisStreams} */ (
    jspb.Message.getWrapperField(this, records_redis$streams_pb.RedisStreams, 112));
};


/**
 * @param {?proto.protos.records.RedisStreams|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setRedisStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 112, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional AzureEventHub azure_event_hub = 113;
 * @return {?proto.protos.records.AzureEventHub}
 */
proto.protos.records.ReadRecord.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.records.AzureEventHub} */ (
    jspb.Message.getWrapperField(this, records_azure$event$hub_pb.AzureEventHub, 113));
};


/**
 * @param {?proto.protos.records.AzureEventHub|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 113, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional AzureServiceBus azure_service_bus = 114;
 * @return {?proto.protos.records.AzureServiceBus}
 */
proto.protos.records.ReadRecord.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.records.AzureServiceBus} */ (
    jspb.Message.getWrapperField(this, records_azure$service$bus_pb.AzureServiceBus, 114));
};


/**
 * @param {?proto.protos.records.AzureServiceBus|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 114, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional MQTT mqtt = 115;
 * @return {?proto.protos.records.MQTT}
 */
proto.protos.records.ReadRecord.prototype.getMqtt = function() {
  return /** @type{?proto.protos.records.MQTT} */ (
    jspb.Message.getWrapperField(this, records_mqtt_pb.MQTT, 115));
};


/**
 * @param {?proto.protos.records.MQTT|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setMqtt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 115, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional KubeMQ kubemq = 116;
 * @return {?proto.protos.records.KubeMQ}
 */
proto.protos.records.ReadRecord.prototype.getKubemq = function() {
  return /** @type{?proto.protos.records.KubeMQ} */ (
    jspb.Message.getWrapperField(this, records_kubemq_pb.KubeMQ, 116));
};


/**
 * @param {?proto.protos.records.KubeMQ|undefined} value
 * @return {!proto.protos.records.ReadRecord} returns this
*/
proto.protos.records.ReadRecord.prototype.setKubemq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 116, proto.protos.records.ReadRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.ReadRecord} returns this
 */
proto.protos.records.ReadRecord.prototype.clearKubemq = function() {
  return this.setKubemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.ReadRecord.prototype.hasKubemq = function() {
  return jspb.Message.getField(this, 116) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protos.records.WriteRecord.oneofGroups_ = [[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116]];

/**
 * @enum {number}
 */
proto.protos.records.WriteRecord.RecordsCase = {
  RECORDS_NOT_SET: 0,
  KAFKA: 100,
  ACTIVE_MQ: 101,
  AWSSQS: 102,
  MONGO: 103,
  NATS: 104,
  NATS_STREAMING: 105,
  NSQ: 106,
  POSTGRES: 107,
  PULSAR: 108,
  RABBIT: 109,
  RABBIT_STREAMS: 110,
  REDIS_PUBSUB: 111,
  REDIS_STREAMS: 112,
  AZURE_EVENT_HUB: 113,
  AZURE_SERVICE_BUS: 114,
  MQTT: 115,
  KUBEMQ: 116
};

/**
 * @return {proto.protos.records.WriteRecord.RecordsCase}
 */
proto.protos.records.WriteRecord.prototype.getRecordsCase = function() {
  return /** @type {proto.protos.records.WriteRecord.RecordsCase} */(jspb.Message.computeOneofCase(this, proto.protos.records.WriteRecord.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.records.WriteRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.records.WriteRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.records.WriteRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.WriteRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    encoded: msg.getEncoded_asB64(),
    kafka: (f = msg.getKafka()) && records_kafka_pb.Kafka.toObject(includeInstance, f),
    activeMq: (f = msg.getActiveMq()) && records_activemq_pb.ActiveMQ.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && records_aws$sqs_pb.AWSSQS.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && records_mongo_pb.Mongo.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && records_nats_pb.Nats.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && records_nats$streaming_pb.NatsStreaming.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && records_nsq_pb.NSQ.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && records_postgres_pb.Postgres.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && records_pulsar_pb.Pulsar.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && records_rabbit_pb.Rabbit.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && records_rabbit$streams_pb.RabbitStreams.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && records_redis$pubsub_pb.RedisPubsub.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && records_redis$streams_pb.RedisStreams.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && records_azure$event$hub_pb.AzureEventHub.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && records_azure$service$bus_pb.AzureServiceBus.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && records_mqtt_pb.MQTT.toObject(includeInstance, f),
    kubemq: (f = msg.getKubemq()) && records_kubemq_pb.KubeMQ.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.records.WriteRecord}
 */
proto.protos.records.WriteRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.records.WriteRecord;
  return proto.protos.records.WriteRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.records.WriteRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.records.WriteRecord}
 */
proto.protos.records.WriteRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncoded(value);
      break;
    case 100:
      var value = new records_kafka_pb.Kafka;
      reader.readMessage(value,records_kafka_pb.Kafka.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new records_activemq_pb.ActiveMQ;
      reader.readMessage(value,records_activemq_pb.ActiveMQ.deserializeBinaryFromReader);
      msg.setActiveMq(value);
      break;
    case 102:
      var value = new records_aws$sqs_pb.AWSSQS;
      reader.readMessage(value,records_aws$sqs_pb.AWSSQS.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new records_mongo_pb.Mongo;
      reader.readMessage(value,records_mongo_pb.Mongo.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 104:
      var value = new records_nats_pb.Nats;
      reader.readMessage(value,records_nats_pb.Nats.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new records_nats$streaming_pb.NatsStreaming;
      reader.readMessage(value,records_nats$streaming_pb.NatsStreaming.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new records_nsq_pb.NSQ;
      reader.readMessage(value,records_nsq_pb.NSQ.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new records_postgres_pb.Postgres;
      reader.readMessage(value,records_postgres_pb.Postgres.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    case 108:
      var value = new records_pulsar_pb.Pulsar;
      reader.readMessage(value,records_pulsar_pb.Pulsar.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 109:
      var value = new records_rabbit_pb.Rabbit;
      reader.readMessage(value,records_rabbit_pb.Rabbit.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 110:
      var value = new records_rabbit$streams_pb.RabbitStreams;
      reader.readMessage(value,records_rabbit$streams_pb.RabbitStreams.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 111:
      var value = new records_redis$pubsub_pb.RedisPubsub;
      reader.readMessage(value,records_redis$pubsub_pb.RedisPubsub.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 112:
      var value = new records_redis$streams_pb.RedisStreams;
      reader.readMessage(value,records_redis$streams_pb.RedisStreams.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 113:
      var value = new records_azure$event$hub_pb.AzureEventHub;
      reader.readMessage(value,records_azure$event$hub_pb.AzureEventHub.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 114:
      var value = new records_azure$service$bus_pb.AzureServiceBus;
      reader.readMessage(value,records_azure$service$bus_pb.AzureServiceBus.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 115:
      var value = new records_mqtt_pb.MQTT;
      reader.readMessage(value,records_mqtt_pb.MQTT.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 116:
      var value = new records_kubemq_pb.KubeMQ;
      reader.readMessage(value,records_kubemq_pb.KubeMQ.deserializeBinaryFromReader);
      msg.setKubemq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.records.WriteRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.records.WriteRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.records.WriteRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.WriteRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncoded_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      records_kafka_pb.Kafka.serializeBinaryToWriter
    );
  }
  f = message.getActiveMq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      records_activemq_pb.ActiveMQ.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      records_aws$sqs_pb.AWSSQS.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      records_mongo_pb.Mongo.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      records_nats_pb.Nats.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      records_nats$streaming_pb.NatsStreaming.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      records_nsq_pb.NSQ.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      records_postgres_pb.Postgres.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      records_pulsar_pb.Pulsar.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      records_rabbit_pb.Rabbit.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      records_rabbit$streams_pb.RabbitStreams.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      records_redis$pubsub_pb.RedisPubsub.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      records_redis$streams_pb.RedisStreams.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      records_azure$event$hub_pb.AzureEventHub.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      records_azure$service$bus_pb.AzureServiceBus.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      records_mqtt_pb.MQTT.serializeBinaryToWriter
    );
  }
  f = message.getKubemq();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      records_kubemq_pb.KubeMQ.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes _encoded = 1;
 * @return {!(string|Uint8Array)}
 */
proto.protos.records.WriteRecord.prototype.getEncoded = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes _encoded = 1;
 * This is a type-conversion wrapper around `getEncoded()`
 * @return {string}
 */
proto.protos.records.WriteRecord.prototype.getEncoded_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncoded()));
};


/**
 * optional bytes _encoded = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncoded()`
 * @return {!Uint8Array}
 */
proto.protos.records.WriteRecord.prototype.getEncoded_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncoded()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.setEncoded = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Kafka kafka = 100;
 * @return {?proto.protos.records.Kafka}
 */
proto.protos.records.WriteRecord.prototype.getKafka = function() {
  return /** @type{?proto.protos.records.Kafka} */ (
    jspb.Message.getWrapperField(this, records_kafka_pb.Kafka, 100));
};


/**
 * @param {?proto.protos.records.Kafka|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setKafka = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ActiveMQ active_mq = 101;
 * @return {?proto.protos.records.ActiveMQ}
 */
proto.protos.records.WriteRecord.prototype.getActiveMq = function() {
  return /** @type{?proto.protos.records.ActiveMQ} */ (
    jspb.Message.getWrapperField(this, records_activemq_pb.ActiveMQ, 101));
};


/**
 * @param {?proto.protos.records.ActiveMQ|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setActiveMq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearActiveMq = function() {
  return this.setActiveMq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasActiveMq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional AWSSQS awssqs = 102;
 * @return {?proto.protos.records.AWSSQS}
 */
proto.protos.records.WriteRecord.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.records.AWSSQS} */ (
    jspb.Message.getWrapperField(this, records_aws$sqs_pb.AWSSQS, 102));
};


/**
 * @param {?proto.protos.records.AWSSQS|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setAwssqs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional Mongo mongo = 103;
 * @return {?proto.protos.records.Mongo}
 */
proto.protos.records.WriteRecord.prototype.getMongo = function() {
  return /** @type{?proto.protos.records.Mongo} */ (
    jspb.Message.getWrapperField(this, records_mongo_pb.Mongo, 103));
};


/**
 * @param {?proto.protos.records.Mongo|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setMongo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional Nats nats = 104;
 * @return {?proto.protos.records.Nats}
 */
proto.protos.records.WriteRecord.prototype.getNats = function() {
  return /** @type{?proto.protos.records.Nats} */ (
    jspb.Message.getWrapperField(this, records_nats_pb.Nats, 104));
};


/**
 * @param {?proto.protos.records.Nats|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setNats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional NatsStreaming nats_streaming = 105;
 * @return {?proto.protos.records.NatsStreaming}
 */
proto.protos.records.WriteRecord.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.records.NatsStreaming} */ (
    jspb.Message.getWrapperField(this, records_nats$streaming_pb.NatsStreaming, 105));
};


/**
 * @param {?proto.protos.records.NatsStreaming|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setOneofWrapperField(this, 105, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional NSQ nsq = 106;
 * @return {?proto.protos.records.NSQ}
 */
proto.protos.records.WriteRecord.prototype.getNsq = function() {
  return /** @type{?proto.protos.records.NSQ} */ (
    jspb.Message.getWrapperField(this, records_nsq_pb.NSQ, 106));
};


/**
 * @param {?proto.protos.records.NSQ|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setNsq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 106, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional Postgres postgres = 107;
 * @return {?proto.protos.records.Postgres}
 */
proto.protos.records.WriteRecord.prototype.getPostgres = function() {
  return /** @type{?proto.protos.records.Postgres} */ (
    jspb.Message.getWrapperField(this, records_postgres_pb.Postgres, 107));
};


/**
 * @param {?proto.protos.records.Postgres|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setPostgres = function(value) {
  return jspb.Message.setOneofWrapperField(this, 107, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional Pulsar pulsar = 108;
 * @return {?proto.protos.records.Pulsar}
 */
proto.protos.records.WriteRecord.prototype.getPulsar = function() {
  return /** @type{?proto.protos.records.Pulsar} */ (
    jspb.Message.getWrapperField(this, records_pulsar_pb.Pulsar, 108));
};


/**
 * @param {?proto.protos.records.Pulsar|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setPulsar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 108, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional Rabbit rabbit = 109;
 * @return {?proto.protos.records.Rabbit}
 */
proto.protos.records.WriteRecord.prototype.getRabbit = function() {
  return /** @type{?proto.protos.records.Rabbit} */ (
    jspb.Message.getWrapperField(this, records_rabbit_pb.Rabbit, 109));
};


/**
 * @param {?proto.protos.records.Rabbit|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setRabbit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 109, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional RabbitStreams rabbit_streams = 110;
 * @return {?proto.protos.records.RabbitStreams}
 */
proto.protos.records.WriteRecord.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.records.RabbitStreams} */ (
    jspb.Message.getWrapperField(this, records_rabbit$streams_pb.RabbitStreams, 110));
};


/**
 * @param {?proto.protos.records.RabbitStreams|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional RedisPubsub redis_pubsub = 111;
 * @return {?proto.protos.records.RedisPubsub}
 */
proto.protos.records.WriteRecord.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.records.RedisPubsub} */ (
    jspb.Message.getWrapperField(this, records_redis$pubsub_pb.RedisPubsub, 111));
};


/**
 * @param {?proto.protos.records.RedisPubsub|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 111, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional RedisStreams redis_streams = 112;
 * @return {?proto.protos.records.RedisStreams}
 */
proto.protos.records.WriteRecord.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.records.RedisStreams} */ (
    jspb.Message.getWrapperField(this, records_redis$streams_pb.RedisStreams, 112));
};


/**
 * @param {?proto.protos.records.RedisStreams|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setRedisStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 112, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional AzureEventHub azure_event_hub = 113;
 * @return {?proto.protos.records.AzureEventHub}
 */
proto.protos.records.WriteRecord.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.records.AzureEventHub} */ (
    jspb.Message.getWrapperField(this, records_azure$event$hub_pb.AzureEventHub, 113));
};


/**
 * @param {?proto.protos.records.AzureEventHub|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 113, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional AzureServiceBus azure_service_bus = 114;
 * @return {?proto.protos.records.AzureServiceBus}
 */
proto.protos.records.WriteRecord.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.records.AzureServiceBus} */ (
    jspb.Message.getWrapperField(this, records_azure$service$bus_pb.AzureServiceBus, 114));
};


/**
 * @param {?proto.protos.records.AzureServiceBus|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 114, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional MQTT mqtt = 115;
 * @return {?proto.protos.records.MQTT}
 */
proto.protos.records.WriteRecord.prototype.getMqtt = function() {
  return /** @type{?proto.protos.records.MQTT} */ (
    jspb.Message.getWrapperField(this, records_mqtt_pb.MQTT, 115));
};


/**
 * @param {?proto.protos.records.MQTT|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setMqtt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 115, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional KubeMQ kubemq = 116;
 * @return {?proto.protos.records.KubeMQ}
 */
proto.protos.records.WriteRecord.prototype.getKubemq = function() {
  return /** @type{?proto.protos.records.KubeMQ} */ (
    jspb.Message.getWrapperField(this, records_kubemq_pb.KubeMQ, 116));
};


/**
 * @param {?proto.protos.records.KubeMQ|undefined} value
 * @return {!proto.protos.records.WriteRecord} returns this
*/
proto.protos.records.WriteRecord.prototype.setKubemq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 116, proto.protos.records.WriteRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.records.WriteRecord} returns this
 */
proto.protos.records.WriteRecord.prototype.clearKubemq = function() {
  return this.setKubemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.records.WriteRecord.prototype.hasKubemq = function() {
  return jspb.Message.getField(this, 116) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.records.ErrorRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.records.ErrorRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.records.ErrorRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.ErrorRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    occurredAtUnixTsUtc: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.records.ErrorRecord}
 */
proto.protos.records.ErrorRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.records.ErrorRecord;
  return proto.protos.records.ErrorRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.records.ErrorRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.records.ErrorRecord}
 */
proto.protos.records.ErrorRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOccurredAtUnixTsUtc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.records.ErrorRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.records.ErrorRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.records.ErrorRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.records.ErrorRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOccurredAtUnixTsUtc();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional int64 occurred_at_unix_ts_utc = 1;
 * @return {number}
 */
proto.protos.records.ErrorRecord.prototype.getOccurredAtUnixTsUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.records.ErrorRecord} returns this
 */
proto.protos.records.ErrorRecord.prototype.setOccurredAtUnixTsUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.protos.records.ErrorRecord.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.records.ErrorRecord} returns this
 */
proto.protos.records.ErrorRecord.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, bytes> metadata = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.protos.records.ErrorRecord.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protos.records.ErrorRecord} returns this
 */
proto.protos.records.ErrorRecord.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


goog.object.extend(exports, proto.protos.records);
